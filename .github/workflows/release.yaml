# Creates a GitHub release
on:
  push:
    branches:
      - "main"

name: Main Release

jobs:
  build:
    name: Build release artefacts
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v5
        with:
          go-version: ^1.24
        id: go
      - name: Checkout code
        uses: actions/checkout@v5
      - name: Build project
        run: auto/build
      - name: Upload build artefacts
        uses: actions/upload-artifact@v4
        with:
          name: binaries
          path: build/route53-record-updater_*
  get_metadata:
    name: Get app metadata
    runs-on: ubuntu-latest
    needs: []
    outputs:
      version_number: ${{ steps.get.outputs.version }}
      matching_tag: ${{ steps.get.outputs.matching_tag }}
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v5
        with:
          go-version: ^1.24
        id: go
      - name: Checkout code
        uses: actions/checkout@v5
      - id: get
        name: Get version from command line
        run: |
          APP_VERSION="$(go run . --version)"
          echo "version=${APP_VERSION}" >> "${GITHUB_OUTPUT}"
          echo "APP_VERSION: ${APP_VERSION}"
          git fetch --tags
          MATCHING_TAG="$(git tag --list | grep "^v${APP_VERSION}$" || true)"
          echo "MATCHING_TAG: ${MATCHING_TAG}"
          echo "matching_tag=${MATCHING_TAG}" >> "${GITHUB_OUTPUT}"

  build_push_docker:
    name: Build & Push
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    needs:
      - get_metadata
    if: needs.get_metadata.outputs.matching_tag == ''
    steps:
      - uses: actions/checkout@v5

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push to GitHub Container Registry
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:latest
            ghcr.io/${{ github.repository }}:${{ github.sha }}
            ghcr.io/${{ github.repository }}:${{ needs.get_metadata.outputs.version_number }}

  push_tag:
    name: Push tag
    runs-on: ubuntu-latest
    needs:
      - get_metadata
      - build_push_docker
    if: needs.get_metadata.outputs.matching_tag == ''
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      - name: Push tag
        run: |
          git tag "v${{ needs.get_metadata.outputs.version_number }}"
          git push origin "v${{ needs.get_metadata.outputs.version_number }}"

  create_release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs:
      - build
      - get_metadata
      - build_push_docker
      - push_tag
    steps:
      - name: Download compiled binaries
        uses: actions/download-artifact@v4
        with:
          name: binaries
          path: build/

      - name: Create release
        id: create_release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ needs.get_metadata.outputs.version_number }}
          files: build/route53-record-updater_*
          body: |
            Release: Version ${{ needs.get_metadata.outputs.version_number }}

            ${{ github.event.head_commit.message }}

            Docker Image: ghcr.io/${{ github.repository }}:${{ needs.get_metadata.outputs.version_number }}
